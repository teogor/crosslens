public final class dev/teogor/crosslens/core/HashCodeBuilder {
	public fun <init> ()V
	public fun <init> (II)V
	public synthetic fun <init> (IIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun append (Ljava/lang/Object;)Ldev/teogor/crosslens/core/HashCodeBuilder;
	public final fun build ()I
}

public final class dev/teogor/crosslens/core/HashCodeBuilderKt {
	public static final fun buildHashCode (IILkotlin/jvm/functions/Function1;)I
	public static synthetic fun buildHashCode$default (IILkotlin/jvm/functions/Function1;ILjava/lang/Object;)I
	public static final fun buildLazyHashCode (Lkotlin/jvm/functions/Function1;)Lkotlin/Lazy;
	public static final fun lazyHashCode (Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;
}

public final class dev/teogor/crosslens/core/KClassKtx_commonKt {
	public static final fun getMultiplatformName (Lkotlin/reflect/KClass;)Ljava/lang/String;
}

public final class dev/teogor/crosslens/core/KClassKtx_jvmKt {
	public static final fun getFormattedName (Lkotlin/reflect/KClass;Ldev/teogor/crosslens/core/NameFormat;)Ljava/lang/String;
	public static synthetic fun getFormattedName$default (Lkotlin/reflect/KClass;Ldev/teogor/crosslens/core/NameFormat;ILjava/lang/Object;)Ljava/lang/String;
}

public final class dev/teogor/crosslens/core/NameFormat : java/lang/Enum {
	public static final field MULTIPLATFORM Ldev/teogor/crosslens/core/NameFormat;
	public static final field QUALIFIED Ldev/teogor/crosslens/core/NameFormat;
	public static final field SIMPLE Ldev/teogor/crosslens/core/NameFormat;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Ldev/teogor/crosslens/core/NameFormat;
	public static fun values ()[Ldev/teogor/crosslens/core/NameFormat;
}

public final class dev/teogor/crosslens/core/concurrent/SynchronizedMap : java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public fun <init> ()V
	public fun clear ()V
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun copy ()Ldev/teogor/crosslens/core/concurrent/SynchronizedMap;
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class dev/teogor/crosslens/core/concurrent/SynchronizedSet : java/util/Set, kotlin/jvm/internal/markers/KMutableSet {
	public fun <init> ()V
	public fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public final fun copy ()Ldev/teogor/crosslens/core/concurrent/SynchronizedSet;
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

